{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Drink Master API",
    "description": "This is the Drink Master server",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    },
    {
      "url": "https://drink-master-api-umd0.onrender.com/api",
      "description": "Render server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Filters",
      "description": "Filters endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK: Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "user": {
                    "name": "Davy Jones",
                    "email": "user@example.com",
                    "dateOfBirth": "2000-01-25"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request body or missing required parameters",
            "content": {
              "application/json": {
                "example": {
                  "message": "name is required, email is required, password is required, dateOfBirth is required"
                }
              }
            }
          },
          "409": {
            "description": "409 Conflict: Provided email already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email already in use"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log In User",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "string",
                    "example": "qwerty123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK: Successful login. Returns an access token in the response body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Y2ViMDA3ODRjYTY2ZjlmM2EyYWQ1OCIsIm5hbWUiOiJEYXZ5IEpvbmVzIiwiaWF0IjoxNzA4MTMzODAzLCJleHAiOjE3MDk5NDgyMDN9.8L6Vtof4Ile2m78u-OeFZouX9FkAG2GYP2ryNNqb408",
                    "user": {
                      "name": "Davy Jones",
                      "email": "user@example.com",
                      "dateOfBirth": "2000-01-25"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Invalid request body or missing required parameters",
            "content": {
              "application/json": {
                "example": {
                  "message": "email is required, password is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Authentication failed due to invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log Out User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content: Successful sign out. Access token is invalidated"
          },
          "401": {
            "description": "Unauthorized: Authentication failed due to invalid token",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },
    "/filters/categories": {
      "get": {
        "tags": [
          "Filters"
        ],
        "summary": "Returns all categories",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "example": [
                    {
                      "_id": "65ce24347742e57091247921",
                      "category": "Beer"
                    },
                    {
                      "_id": "65ce24347742e57091247922",
                      "category": "Soft Drink"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },
    "/filters/ingredients": {
      "get": {
        "tags": [
          "Filters"
        ],
        "summary": "Returns all ingredients",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ingredient"
                  },
                  "example": [
                    {
                      "_id": "64f1d5c169d8333cf130fb4d",
                      "ingredientThumb": "https://ftp.goit.study/img/drinkify/ingredients/Ice.png",
                      "thumb-medium": "https://ftp.goit.study/img/drinkify/ingredients/Ice-Medium.png",
                      "thumb-small": "https://ftp.goit.study/img/drinkify/ingredients/Ice-Small.png",
                      "title": "Ice",
                      "description": "Ice is water frozen into a solid state.",
                      "type": "Solid",
                      "alcohol": "No",
                      "abv": 0,
                      "flavour": "Neutral",
                      "country": "Various"
                    },
                    {
                      "_id": "64f1d5c669d8333cf130fbb4",
                      "ingredientThumb": "https://ftp.goit.study/img/drinkify/ingredients/Pineapple.png",
                      "thumb-medium": "https://ftp.goit.study/img/drinkify/ingredients/Pineapple-Medium.png",
                      "thumb-small": "https://ftp.goit.study/img/drinkify/ingredients/Pineapple-Small.png",
                      "title": "Pineapple",
                      "description": "The pineapple (Ananas comosus) is a tropical plant",
                      "type": "Fruit",
                      "alcohol": "No",
                      "abv": 0,
                      "flavour": "Sweet, Tart",
                      "country": "Global(Tropical Regions)"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },
    "/filters/glasses": {
      "get": {
        "tags": [
          "Filters"
        ],
        "summary": "Returns all glasses",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of glasses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Glass"
                  },
                  "example": [
                    {
                      "_id": "65ce2dae7742e57091247939",
                      "glass": "Pint glass"
                    },
                    {
                      "_id": "65ce2dae7742e57091247933",
                      "glass": "Coffee mug"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get information about the current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK. Authenticated user's data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated"
          }
        }
      }
    },
    "/users/subscribe": {
      "post": {
        "summary": "Subscribe a user to the mailing list",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "Users"
        ],
        "description": "Allows a user to add an email to their subscription list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content. Email was added successfully"
          },
          "400": {
            "description": "Email is already subscribed",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email is already subscribed"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "summary": "Update user information",
        "description": "Updates user information including avatar and name.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Avatar image file"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name"
                  }
                },
                "required": [
                  "avatar",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatarURL": {
                      "type": "string"
                    },
                    "dateOfBirth": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "dateOfBirth"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Backend-generated unique identifier."
          },
          "name": {
            "type": "string",
            "description": "Username."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail address."
          },
          "password": {
            "type": "string",
            "description": "Password."
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "Date of birth in format: YYYY-MM-DD. Example: '2000-01-25'."
          },
          "avatarURL": {
            "type": "string",
            "nullable": true,
            "description": "Avatar URL."
          }
        },
        "example": {
          "name": "Davy Jones",
          "email": "user@example.com",
          "password": "qwerty123",
          "dateOfBirth": "2000-01-25"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65ce24347742e57091247921",
            "format": "mongo-id"
          },
          "category": {
            "type": "string",
            "example": "Beer"
          }
        }
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64f1d5c169d8333cf130fb4d"
          },
          "ingredientThumb": {
            "type": "string",
            "format": "uri",
            "example": "https://ftp.goit.study/img/drinkify/ingredients/Ice.png"
          },
          "thumb-medium": {
            "type": "string",
            "format": "uri",
            "example": "https://ftp.goit.study/img/drinkify/ingredients/Ice-Medium.png"
          },
          "thumb-small": {
            "type": "string",
            "format": "uri",
            "example": "https://ftp.goit.study/img/drinkify/ingredients/Ice-Small.png"
          },
          "title": {
            "type": "string",
            "example": "Ice"
          },
          "description": {
            "type": "string",
            "example": "Ice is water frozen into a solid state."
          },
          "type": {
            "type": "string",
            "example": "Solid"
          },
          "alcohol": {
            "type": "string",
            "example": "No"
          },
          "abv": {
            "type": "number",
            "example": 0
          },
          "flavour": {
            "type": "string",
            "example": "Neutral"
          },
          "country": {
            "type": "string",
            "example": "Various"
          }
        }
      },
      "Glass": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65ce2dae7742e57091247939",
            "format": "mongo-id"
          },
          "glass": {
            "type": "string",
            "example": "Pint glass"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
